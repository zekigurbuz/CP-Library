struct dsu {
  vi pset;
  vi size;
  int numsets;
  dsu(int n) {
    numsets = n;
    pset.resize(n);
    size.resize(n);
    forn(i, n) pset[i] = i;
    forn(i, n) size[i] = 1;
  }
  int find_set(int i) {
    return pset[i] == i ? i : pset[i] = find_set(pset[i]);
  }
  void unify(int i, int j) {
    int a = find_set(i), b = find_set(j);
    if (a == b) return;
    numsets--;
    if (size[a] < size[b]) {
      pset[a] = b;
      size[b] += size[a];
    } else {
      pset[b] = a;
      size[a] += size[b];
    }
  }
  bool same_set(int i, int j) {
    return find_set(i) == find_set(j);
  }
  int size_set(int i) {
    return size[find_set(i)];
  }
};
