long long POW(long long n, long long p, long long mod) {
    long long ret = 1LL;
    while (p) {
        if (p%2LL) {ret *= (n % mod); ret %= mod;}
        n *= (n % mod); n %= mod;
        p >>= 1LL;
    }
    return ret;
}
bool comp(long long n, long long a, long long d, long long s) {
    long long x = POW(a, d, n);
    if (x == 1LL || x == n - 1LL) return false;
    for (long long r = 1LL; r < s; ++r) {
        x = (x % n) * (x % n) % n;
        if (x == n - 1LL) return false;
    }
    return true;
}
bool isPrime(long long n) {
    if (n < 2LL) return false;
    long long r = 0LL, d = n - 1LL;
    while (!(d&1LL)) {
        ++r, d >>= 1LL;
    }
    for (long long a : {2LL,3LL,5LL,7LL,11LL,13LL,17LL,19LL,23LL,29LL,31LL,37LL}) {
        if (n == a) return true;
        if (comp(n,a,d,r)) return false;
    }
    return true;
}
